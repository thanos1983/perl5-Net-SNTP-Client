.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::SNTP::Client 3pm"
.TH Net::SNTP::Client 3pm "2015-09-29" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::SNTP::Client \- Perl module to calculate the roundtrip delay d and
 system clock offset t from NTP or SNTP Server.
.SH "VERSION"
.IX Header "VERSION"
Version 0.19
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The Net::SNTP::Client \- Perl module retrieves the time from an \s-1NTP\s0 or
 \s-1SNTP\s0 server and uses the local time to calculate the roundtrip delay
 d and system clock offset t based on \s-1RFC4330.\s0 The module is calculating
 with higher accuracy in comparison to other modules.
.PP
.Vb 1
\&    use Net::SNTP::Client qw ( getSNTPTime );
\&
\&    my ( $error , $hashRefOutput ) = getSNTPTime( %hashInput );
\&    ...
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
The module sends a \s-1UDP\s0 packet formated according to
 \s-1RFC4330\s0 <https://tools.ietf.org/html/rfc4330> to a defined \s-1NTP
\&\s0 or \s-1SNTP\s0 server set by the user. The received packet, gets decoded
 to a human readable form and also calculated the roundtrip delay
 d and system clock offset t, based on the decoded data.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module exports a single method (getSNTPTime) and returns
 an associative hash of hashes upon \s-1RFC4330\s0 and a string in
 case of an error occurs. The response from the \s-1NTP\s0 or \s-1SNTP\s0 server
 is beeen decoded to a human readable format. The obtained
 information recieved from the server can be can be used into
 further processing or manipulation according to the user needs.
 Maximum accuracy down to nano seconds can only be achieved on LinuxOS.
.IP "\(bu" 4
\&\s-1HOSTNAME\s0
.Sp
.Vb 2
\&    \-hostname: The mandatory key inorder the method to produce
\&    an output is only the hostname, the rest of the keys are optional.
.Ve
.IP "\(bu" 4
\&\s-1PORT\s0
.Sp
.Vb 3
\&    \-port: By default the the port is set to 123 (NTP default port).
\&    The user has the option to overwite the port based on the expected
\&    NTP port on the server side (e.g. \-port => 123456).
.Ve
.IP "\(bu" 4
\&\s-1TIMEOUT\s0
.Sp
.Vb 3
\&    \-timeOut: By default the time out is set to 10 seconds. The user
\&    has the option to overwite the time out input option based on the
\&    expected connection time (e.g. timeOut => 15).
.Ve
.IP "\(bu" 4
\&\s-1RFC4330 OUTPUT\s0
.Sp
.Vb 3
\&    \-RFC4330: This is an optional way to produce an easy visual
\&    output based on RFC4330 documentation. Expected input is a string,
\&    integer or boolean in the form (0 or 1).
.Ve
.IP "\(bu" 4
\&\s-1CLEARSCREEN\s0
.Sp
.Vb 4
\&    \-clearScreen: This is an optional choice based on user preference
\&    if he/she desires to clear the "terminal screen" before printing
\&    the captured data. Expected input is a string, integer or boolean
\&    in the form (0 or 1).
.Ve
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.Vb 1
\&  my ( $error , $hashRefOutput ) = getSNTPTime( %hashInput );
.Ve
.SS "getSNTPTime"
.IX Subsection "getSNTPTime"
.Vb 7
\&  my %hashInput = (
\&      \-hostname      => $hostname,    # hostnmae or IP
\&      \-port          => $port,        # default NTP port 123
\&      \-timeOut       => $timeOut,     # default 10
\&      \-RFC4330       => $RFC4330,     # default 0
\&      \-clearScreen   => $clearScreen, # default 0
\&      );
\&
\&  my ( $error , $hashRefOutput ) = getSNTPTime( %hashInput );
.Ve
.PP
This module exports a single method \- getSNTPTime and an error
 string in case of an error or a faulty operation. It expects a
 hash as an input. The input can have four different hash
 keys (\-hostname, port, \s-1RFC4330\s0 and \-clearScreen).
.SH "EXAMPLE"
.IX Header "EXAMPLE"
This example gets the time from a remote \s-1NTP\s0 server from the
 pool.ntp.org: public ntp time server for everyone <http://www.pool.ntp.org/en/> 
 and calculates the roundtrip delay d and local clock offset
 t as defined on \s-1RFC4330.\s0
.PP
We use the Data::Dumper <http://search.cpan.org/~ilyam/Data-Dumper-2.121/Dumper.pm>
 module to print the output.
.PP
.Vb 4
\&  #!/usr/bin/perl
\&  use strict;
\&  use warnings;
\&  use Data::Dumper;
\&
\&  use Net::SNTP::Client;
\&
\&  my %hashInput = (
\&      \-hostname      => "0.pool.ntp.org",
\&      \-port          => 123,
\&      \-timeOutInput  => 10,
\&      \-RFC4330       => 1,
\&      \-clearScreen   => 1,
\&      );
\&
\&  my ( $error , $hashRefOutput ) = getSNTPTime( %hashInput );
\&
\&  print Dumper $hashRefOutput;
\&  print "Error: $error\en" if ($error);
.Ve
.PP
\&\s-1DEPENDENCIES\s0
.PP
The module is implemented using IO::Socket::INET and Time::HiRes
 and requires both these modules to be installed.
.SH "AUTHOR"
.IX Header "AUTHOR"
Athanasios Garyfalos, \f(CW\*(C`<garyfalos at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-net\-sntp\-client at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Net\-SNTP\-Client>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Net::SNTP::Client
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Net\-SNTP\-Client>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Net\-SNTP\-Client>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Net\-SNTP\-Client>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Net\-SNTP\-Client/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl, IO::Socket, Net::NTP, Net::SNTP::Server, \s-1RFC4330\s0 <https://tools.ietf.org/html/rfc4330>
.PP
Net::NTP has a similar focus as this module. In my opinion it
 is less accurate when it comes to the precission bellow second(s).
.SH "DIFFERENCES FROM OTHER MODULES"
.IX Header "DIFFERENCES FROM OTHER MODULES"
Based on the current known modules Net::SNTP::Client is only similar
 to Net::NTP module. The two modules do not have in common the
 encoding and decoding process of fractions of seconds.
.PP
Be aware that on different \s-1OS\s0 different precision can be achieved.
.SH "DIFFERENCES BETWEEN NTP AND SNTP"
.IX Header "DIFFERENCES BETWEEN NTP AND SNTP"
\&\s-1SNTP \s0(Simple Network Time Protocol) and \s-1NTP \s0(Network Time Protocol)
 are describing exactly the same network package format, the differences
 can be found in the way how a system deals with the content of these
 packages in order to synchronize its time.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
The original concept for this module was based on \fI\s-1NTP\s0.pm\fR
written by James G. Willmore <willmorejg@gmail.com>.
.PP
Copyright 2004 by James G. Willmore
.PP
This library is free software; you can redistribute it and/or modify it under
 the same terms as Perl itself.
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2015 Athanasios Garyfalos.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:
.PP
<http://www.perlfoundation.org/artistic_license_2_0>
.PP
Any use, modification, and distribution of the Standard or Modified
Versions is governed by this Artistic License. By using, modifying or
distributing the Package, you accept this license. Do not use, modify,
or distribute the Package, if you do not accept this license.
.PP
If your Modified Version has been derived from a Modified Version made
by someone other than you, you are nevertheless required to ensure that
your Modified Version complies with the requirements of this license.
.PP
This license does not grant you the right to use any trademark, service
mark, tradename, or logo of the Copyright Holder.
.PP
This license includes the non-exclusive, worldwide, free-of-charge
patent license to make, have made, use, offer to sell, sell, import and
otherwise transfer the Package with respect to any patent claims
licensable by the Copyright Holder that are necessarily infringed by the
Package. If you institute patent litigation (including a cross-claim or
counterclaim) against any party alleging that the Package constitutes
direct or contributory patent infringement, then this Artistic License
to you shall terminate on the date that such litigation is filed.
.PP
Disclaimer of Warranty: \s-1THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
AND CONTRIBUTORS "AS IS\s0' \s-1AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, OR\s0 NON-INFRINGEMENT \s-1ARE DISCLAIMED TO THE EXTENT PERMITTED BY
YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\s0
.ie n .SH "CHANGE LOG $Log: Client.pm,v $ Revision 19.0  2015/09/29 7:17:21 pm  Thanos"
.el .SH "CHANGE LOG \f(CW$Log:\fP Client.pm,v $ Revision 19.0  2015/09/29 7:17:21 pm  Thanos"
.IX Header "CHANGE LOG $Log: Client.pm,v $ Revision 19.0 2015/09/29 7:17:21 pm Thanos"
